*        Listing APF libraries
*        LISTAPF SOURCE CODE
*        Convert TPUT to PUTLINE via Howard Dean and Jim Ellsworth
*===================================================================*
* LISTAPF - Program to list APF-authorized libraries by issuing     *
* macro CSVAPF.                                                     *
*===================================================================*
* ------------------------------------------------------------------- *
         MACRO
&LABEL   APUT  &MSG,                    @MESSAGE TEXT                  &
               &LEN,                    @LENGTH OF MESSAGE             &
               &RSA=,                   OPTIONAL 2 WORD SAVE AREA      &
               &EPA=                    EPUTL EPA
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*  --> E@PUT
.*
.*  THIS MACRO SETS UP A PARAMETERS AND INVOKES THE EPUTL ROUTINE.
.*
.*
.*  ARGUMENTS: -----------------------------------------------------
.*
.*      &MSG : ADDRESS OF MESSAGE TEXT OR A LITERAL
.*
.*      &LEN : LENGTH OF MESSAGE TEXT (DEFAULT IS L'&MSG)
.*
.*      &RSA :(OPTIONAL) 1 WORD SAVE AREA TO PRESERVE R14 FOR TPUT
.*            COMPATIBILITY.
.*
.*      &EPA :(OPTIONAL) EPA FOR EPUTL ROUTINE
.*
.*
.*   EXAMPLES: -----------------------------------------------------
.*
.*      1) APUT  'LITERAL'
.*
.*      2) APUT  (R3),80
.*
.*      3) APUT  LABEL
.*
.*      4) APUT  LABEL,40
.*
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*
.*  LOCAL SET SYMBOLS
.*
         LCLC  &SMA                     MESSAGE ADDRESS (REG)
         LCLC  &SML                     MESSAGE LENGTH (REG)
         LCLC  &SEP                     EPA (REGISTER)
.*
         LCLC  &L1,&L2,&L3              LOCAL LABELS
.*
&L1      SETC  'EP'.'&SYSNDX'.'L1'      LOCAL LABELS
&L2      SETC  'EP'.'&SYSNDX'.'L2'      LOCAL LABELS
&L3      SETC  'EP'.'&SYSNDX'.'L3'      LOCAL LABELS
.*
.*
.*  MESSAGE ADDRESS
.*
         AIF   (T'&LABEL EQ 'O').A0500                      *HMD 11/86*
.*                                                          *HMD 11/86*
&LABEL   DS    0H                                           *HMD 11/86*
.*                                                          *HMD 11/86*
.A0500   ANOP                                               *HMD 11/86*
         AIF   ('&MSG' NE '').A2000
         MNOTE 8,'''&MSG='' MISSING / REQUIRED'
         MEXIT
.*
.A2000   ANOP
         AIF   ('&MSG'(1,1) NE '(').A2400
&SMA     SETC  '&MSG'(2,K'&MSG-2)
         LR    R1,&SMA                  @MESSAGE TEXT
         AGO   .A2600
.*
.A2400   ANOP
         AIF   ('&MSG'(1,1) NE '''').A2500
         B     &L3                      BRANCH AROUND MESSAGE
&L2      DC    C&MSG
&L3      DS    0H
         LA    R1,&L2                   @MESSAGE
         AGO   .A2600
.*
.A2500   ANOP
         LA    R1,&MSG                  @MESSAGE TEXT
.A2600   ANOP
.*
.*  MESSAGE LENGTH
.*
         AIF   ('&LEN' NE '').A3000
         AIF   ('&MSG'(1,1) NE '''').A2800
         LA    R0,L'&L2                 MESSAGE LENGTH
         AGO   .A3600
.*
.A2800   ANOP
         AIF   ('&MSG'(1,1) EQ '(').A2900
         LA    R0,L'&MSG                MESSAGE LENGTH
         AGO   .A3600
.*
.A2900   ANOP
         MNOTE 8,'''LEN'' MISSING / REQUIRED'
         MEXIT
.*
.A3000   ANOP
         AIF   ('&LEN'(1,1) NE '(').A3400
&SML     SETC  '&LEN'(2,K'&LEN-2)
         LR    R0,&SML                  MESSAGE LENGTH
         AGO   .A3600
.*
.A3400   ANOP
         LA    R0,&LEN                  MESSAGE LENGTH
.A3600   ANOP
.*
.*  RSA
.*
         AIF   ('&RSA' EQ '').A4900
         ST    R14,&RSA                 SAVE REGS 14
.A4900   ANOP
.*
.*  ENTRY POINT
.*
         AIF   ('&EPA' NE '').A5000
         L     R15,=V(EPUTL)            EPA
         AGO   .A5600
.*
.A5000   AIF   ('&EPA'(1,1) NE '(').A5400
&SEP     SETC  '&EPA'(2,K'&EPA-2)
         LR    R15,&SEP                 EPA
         AGO   .A5600
.*
.A5400   ANOP
         L     R15,&EPA                 EPA
.*
.A5600   ANOP
.*
.*  CALL LINKAGE
.*
.ACALL   BALR  R14,R15                  CALL PUTLINE ROUTINE
.*
         AIF   ('&RSA' EQ '').A6900
         L     R14,&RSA                 RESTORE R14
.A6900   ANOP
.*
.AMEND   MEND
* ------------------------------------------------------------------- *
LISTAPF  CSECT
LISTAPF  AMODE 31
LISTAPF  RMODE 24
         SAVE (14,12)
         LR    R12,R15
         USING LISTAPF,R12
         ST    R13,SAVE+4
         LA    R11,SAVE
         ST    R11,8(R13)
         LR    R13,R11
         B     CONTINUE
         DC    CL16' LISTAPF 1.1 '
         DC    CL9'&SYSDATE'
*
CONTINUE DS    0H
         BAL   R11,GETSTOR         Acquire default storage
         LA    R13,SAVE1           Savearea for csvapf
*
GETAP    EQU   *
         CSVAPF REQUEST=LIST,                                          *
               ANSAREA=(R9),                                           *
               ANSLEN=(R8),                                            *
               RSNCODE=RSNCODE,                                        *
               RETCODE=RETCODE
         CLC   RETCODE,=AL4(CSVAPFRC_OK)   Request ok?
         BE    LOOP0               Yes, branch ahead
         CLC   RETCODE,=AL4(CSVAPFRC_WARN) Warning?
         BNE   ERRORS                      No, error
         NC    RSNCODE,=AL4(CSVAPFRSNCODEMASK) Clear high order bits
         CLC   RSNCODE,=AL4(CSVAPFRSNNOTALLDATARETURNED) More length?
         BNE   ERRORS                      No, error
         L     R2,APFHTLEN-APFHDR(4)       Get required length
         BAL   R11,RELSTOR                 Release old storage
         ST    R2,AREALEN                  Store needed length
         BAL   R11,GETSTOR                 Acquire new storage
         B     GETAP                       And request list again
*
LOOP0    EQU   *
         APUT  LINETIT,72                  Send header line
         L     R10,0(,R9)                  R10 = number of entries
         L     R7,12(,R9)                  Jump header
         LA    R9,0(R7,R9)                 R9 = first entry
*
LOOP1    EQU   *                   Loop through list
         MVC   LINEVOL(6),4(R9)    Move volume
         MVC   LINEFILE(44),10(R9) and filename to line
         APUT  LINE0,72            send line
         LH    R7,0(,R9)           point to next entry
         LA    R9,0(R7,R9)
         BCT   R10,LOOP1           loop to next entry
*
EXIT     EQU   *                   Exit program
         BAL   R11,RELSTOR         Release storage
         L     R13,SAVE+4
         LM    R14,R12,12(R13)
         SR    R15,R15
         BR    R14
*===================================================================*
* SUBROUTINES *
*===================================================================*
GETSTOR  EQU   *                   Storage for csvapf
         LA    R8,AREALEN
         STORAGE OBTAIN,                                               *
               LENGTH=(R8),                                            *
               ADDR=(R9)
         ST    R9,AREAADDR
         BR    R11
*
RELSTOR  EQU   *                   Release storage
         LA    R8,AREALEN
         L     R9,AREAADDR
         STORAGE RELEASE,                                              *
               LENGTH=(R8),                                            *
               ADDR=(R9)
         BR    R11
*
ERRORS   EQU   *                   If any error occurred,
         MVC   ZREG,RETCODE        prepare display of
         UNPK  ZOUT9,ZREG5         return and reason codes
         NC    ZOUT8,ZTR1          and send them
         TR    ZOUT8,ZTR2
         MVC   ERRORRC,ZOUT8
         MVC   ZREG,RSNCODE
         UNPK  ZOUT9,ZREG5
         NC    ZOUT8,ZTR1
         TR    ZOUT8,ZTR2
         MVC   ERRORRN,ZOUT8
         APUT  LINERR0,72
         APUT  LINERR1,72
         B     EXIT
*===================================================================*
* WORK AREAS                                                        *
*===================================================================*
SAVE     DS    18F                 Standard save area
SAVE1    DS    18F                 save area for csvapf
AREALEN  DC    F'8192'             default csvapf length
AREAADDR DS    F                   addr of csvapf answer
RETCODE  DS    F                   csvapf returncode
RSNCODE  DS    F                   csvapf reasoncode
LINETIT  DC    CL72'List of APF Authorized datasets'
LINE0    DS    0CL72               output line
         DC    CL4' '
LINEFILE DC    CL50' '
LINEVOL  DC    CL19' '
LINERR0  DS    0CL72               error output line
         DC    C'Error processing request (macro CSVAPF)'
         DC    CL40' '
LINERR1  DS    0CL72
         DC    C'Return Code (hex): '
ERRORRC  DC    CL8' '
         DC    CL4' '
         DC    C'Reason Code (hex): '
ERRORRN  DC    CL8' '
         DC    CL40' '
ZTR1     DC    X'0F0F0F0F0F0F0F0F'
ZTR2     DC    C'0123456789ABCDEF'
         DS    0F
ZREG5    DS    0CL5
ZREG     DS    CL4
         DC    CL1' '
         DS    0D
ZOUT9    DS    0CL9
ZOUT8    DS    CL8
         DC    CL4' '
         LTORG
*
         CSVAPFAA
         YREGS
         END
EPUTL    TITLE 'PUTLINE FOR FEWER THAN 83 ARGUMENTS IN THE KEY OF C MAJ&
               OR'
EPUTL    CSECT                                              *HMD 10/85*
         LCLB  &XA                                          *HMD 10/85*
&XA      SETB  1                  SET TO ZERO ON NON/XA     *HMD 10/85*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  MODULE NAME  . . . . EPUTL
*
*  ALIASES  . . . . . . NONE
*
*  DATE WRITTEN . . . . 06/85
*  UPDATED      . . . . 04/88                                  HD APR88
*  CLEANED A BIT  . . . 08/17
*
*  AUTHOR . . . . . . . JIM ELSWORTH
*  UPDATER  . . . . . . HOWARD M. DEAN                         HD APR88
*
*  ENVIRONMENT  . . . . TSO COMMAND PROCESSOR
*
*  PURPOSE:
*    ALLOW AN EASY INTERFACE TO PUTLINE ROUTINE
*
*
*  DESCRIPTION:
*    BUILDS PUTLINE PARAMETER LIST BASED ON INPUT ARGUMENTS.
*    ISSUES SINGLE LINE PUTLINE.
*
*
*  ATTRIBUTES:
*    REENTRANT
*
*  FEATURES:
*    WILL RUN UNDER BATCH TMP SINCE PUTLINE USED INSTEAD OF TPUT.
*
*  CALLED MODULES:
*    PUTLINE
*
*  ASSUMPTIONS:
*    CALLED BY A TSO-CP THAT IS OBSERVING STANDARD LINKAGE
*
*  ABENDS:
*    POSSIBLE 0CX IF BAD ARGUMENTS
*
*  CAVEATS:
*    UNPREDICTABLE RESULTS IF FIRST PROGRAM RUNNING UNDER THIS TCB
*    DID NOT SAVE (14,12) BEFORE R1 WAS MODIFIED.
*
*
*  INPUT ARGUMENTS:
*    1)  R1 : ADDRESS OF MESSAGE TEXT
*    2)  R0 : LENGTH OF MESSAGE TEXT
*    3) R13 : STANDARD OS SAVE AREA
*    4) R14 : RETURN ADDRESS
*    5) R15 : ENTRY ADDRESS
*
*               ( CONTINUED ... )
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*  OUTPUT ARGUMENT: RETURN CODE FROM PUTLINE OR
*
RCBA     EQU   100                 BAD MESSAGE ADDRESS
RCBL     EQU   104                 MESSAGE LENGTH <1 OR >MAXMSG
*
MAXMSG   EQU   255                 MAXIMUM MESSAGE LENGTH
*
*
*  REGISTERS USED:
*
R0       EQU   0                   MESSAGE LENGTH AT ENTRY
R1       EQU   1                   MESSAGE ADDRESS AT ENTRY
R2       EQU   2                   WORK
R3       EQU   3                   WORK
RMA      EQU   4                   @MESSAGE TEXT
RML      EQU   5                   MESSAGE LENGTH
RUPT     EQU   6                   @UPT (USER PROFILE TABLE)
RECT     EQU   7                   @ECT
R12      EQU   12                  CSECT BASE
R13      EQU   13                  @SAVE AREA AND DYNAMIC WORK AREA
R14      EQU   14                  WORK/LINKAGE
R15      EQU   15                  WORK/LINKAGE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
         IKJCPPL
         EJECT
         IKJTCB   LIST=YES                                  *HMD 10/85*
         EJECT                                              *HMD 10/85*
         CVT      DSECT=YES,LIST=YES                        *HMD 10/85*
         EJECT
         IHAPSA   LIST=YES                                     HD APR88
         EJECT                                                 HD APR88
PUTLDS   DSECT
         DS    18F                      OS SAVE AREA
PUTAAA   EQU   *
PUTECB   DS    F                        ECB
PUTIOPL  DS    4F                       IOPLADS
PUTBLOK  PUTLINE MF=L
PUTLEN   DS    H                        LENGTH
PUTZZZ   DS    H                        RESERVED
PUTMSG   DS    (MAXMSG)C                MESSAGE TEXT AREA
         DS    0D
PUTSIZE  EQU   *-PUTLDS                 SIZE OF PUTLINE PARMS
         EJECT
***********************************************************************
*  SET UP LINKAGE
***********************************************************************
         SPACE 1
EPUTL    CSECT
         AIF  (NOT &XA).X001                                *HMD 10/85*
EPUTL    AMODE 31
.X001    ANOP                                               *HMD 10/85*
         STM   R14,R12,12(R13)    SAVE CALLERS REGS
         LR    R12,R15            COPY EPA
         USING EPUTL,R12          ADDRESSABILITY
         AIF   (NOT &XA).X002                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE,        STANDARD OS SA PLUS ANY EXTRA        &
               LOC=RES,SP=0       RELATIVE TO 16MB LINE
         AGO   .X003                                        *HMD 10/85*
.X002    ANOP                                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE         STANDARD OS SA PLUS ANY EXTRA
.X003    ANOP                                               *HMD 10/85*
         ST    R1,8(,R13)         OUR SAVE AREA POINTER
         ST    R13,4(,R1)         POINTER TO CALLER'S SAVE AREA
         LR    R13,R1             @OUR SAVE AREA
         USING PUTLDS,R13         MAP SA AND WORK AREA
         L     R14,4(,R13)        POINT TO CALLER'S RSA
         LM    R0,R1,20(R14)      RESTORE REGS CHANGED BY GETMAIN
         SPACE 2
***********************************************************************
*  UNLOAD ARGUMENTS AND VALIDATE WHERE POSSIBLE
***********************************************************************
         SPACE 1
         LA    R15,RCBA                 RC IF BAD ADDRESS
         LTR   RMA,R1                   MESSAGE ADDRESS
         BNP   RETURN                   GOOD ASSUMPTION
         LA    R15,RCBL                 RC IF BAD LENGTH
         LTR   RML,R0                   POSITIVE?
         BNP   RETURN                   -NO
         C     RML,=A(MAXMSG)           MORE THAN MAX?
         BH    RETURN                   -YES
         SPACE 2
***********************************************************************
*  BUILD PARAMETER LIST
***********************************************************************
         SPACE 1
         LA    R15,4(,RML)              MESSAGE LENGTH
         STH   R15,PUTLEN               PLUS HEADER
         XC    PUTZZZ,PUTZZZ            CLEAR 2ND HWORD OF RDW
         BCTR  RML,0                    REDUCE FOR MOVE
         EX    RML,PUTMOVE
         EJECT
***********************************************************************
*  DIG UP ADDRESS OF UPT AND ECT
***********************************************************************
         SPACE 1
         L     R2,PSATOLD-PSA           @TCB                   HD APR88
         L     R2,TCBFSA-TCB(,R2)       @1ST PROBLEM PGM SAVE AREA
         L     R2,24(,R2)               REG1 THAT WAS PASSED TO CP
         USING CPPL,R2                  MAP CPPL
         L     RUPT,CPPLUPT             @UPT
         L     RECT,CPPLECT             @ECT
         SPACE 2
***********************************************************************
*  ISSUE PUTLINE CALL
***********************************************************************
         SPACE 1
         XC    PUTECB,PUTECB            CLEAR ECB
         XC    PUTBLOK(12),PUTBLOK      CLEAR PARM BLOCK       HD APR88
         PUTLINE PARM=PUTBLOK,          PARAMETER BLOCK                &
               UPT=(RUPT),              @UPT                           &
               ECT=(RECT),              @ECT                           &
               ECB=PUTECB,              @ECB                           &
               OUTPUT=(PUTLEN,TERM,SINGLE,DATA),                       &
               MF=(E,PUTIOPL)
         EJECT
***********************************************************************
*  RETURN TO CALLER
***********************************************************************
         SPACE 1
RETURN   EQU   *
         LR    R2,R13                   @OUR SAVE AREA
         LR    R3,R15                   SAVE RETURN CODE
         L     R13,4(,R13)              @CALLER'S SAVE AREA
         FREEMAIN RU,LV=PUTSIZE,A=(R2),SP=0
         LR    R15,R3                   RESTORE RC
         RETURN (14,12),RC=(15)         RESTORE CALLER'S REGS
         SPACE 5
***********************************************************************
*  CONSTANTS AND NON-REENTRANT WORK AREAS
***********************************************************************
         SPACE 1
PUTMOVE  MVC   PUTMSG(*-*),0(RMA)       MOVE MESSAGE TO BUFFER
         SPACE 2
         LTORG
         SPACE 2
         END   EPUTL
